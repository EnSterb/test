"""initial migration

Revision ID: 0dd5e20cd2ad
Revises: 
Create Date: 2025-05-17 22:33:46.720198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0dd5e20cd2ad'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('temp_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_temp_users_email'), 'temp_users', ['email'], unique=True)
    op.create_index(op.f('ix_temp_users_id'), 'temp_users', ['id'], unique=False)
    op.create_index(op.f('ix_temp_users_token'), 'temp_users', ['token'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_table('collections',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='collections_pkey')
    )
    op.create_table('links',
    sa.Column('id', sa.Integer(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image', sa.Text(), nullable=True),
    sa.Column('type', sa.Text(), server_default=sa.text("'website'::text"), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("type = ANY (ARRAY['website'::text, 'book'::text, 'article'::text, 'music'::text, 'video'::text])", name='links_type_check'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='links_pkey'),
    sa.UniqueConstraint('url', name='links_url_key')
    )
    op.create_table('password_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(length=255), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_password_tokens_id'), 'password_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_password_tokens_token'), 'password_tokens', ['token'], unique=True)
    op.create_table('collection_links',
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('link_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], name='fk_collection', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['link_id'], ['links.id'], name='fk_link', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('collection_id', 'link_id', name='collection_links_pkey')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('collection_links')
    op.drop_index(op.f('ix_password_tokens_token'), table_name='password_tokens')
    op.drop_index(op.f('ix_password_tokens_id'), table_name='password_tokens')
    op.drop_table('password_tokens')
    op.drop_table('links')
    op.drop_table('collections')
    op.drop_table('users')
    op.drop_index(op.f('ix_temp_users_token'), table_name='temp_users')
    op.drop_index(op.f('ix_temp_users_id'), table_name='temp_users')
    op.drop_index(op.f('ix_temp_users_email'), table_name='temp_users')
    op.drop_table('temp_users')
    # ### end Alembic commands ###
